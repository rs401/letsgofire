rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }
    // function emailVerified() {
    //   return request.auth.token.email_verified;
    // }
    // function userExists() {
    //   return exists(/databases/$(database)/documents/users/$(request.auth.uid));
    // }

    // [READ] Data that exists on the Firestore document
    function existingData() {
      return resource.data;
    }
    // [WRITE] Data that is sent to a Firestore document
    function incomingData() {
      return request.resource.data;
    }

    // Does the logged-in user match the requested userId?
    function isUser(userId) {
      return request.auth.uid == userId;
    }

    // Fetch a user from Firestore
    // function getUserData() {
    //   return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    // }

    // Fetch a user-specific field from Firestore
    // function userEmail(userId) {
    //   return get(/databases/$(database)/documents/users/$(userId)).data.email;
    // }

    // allow all list category
    match /category/{document=**} {
      allow read;
    }

    // Users
    match /users/{document=**} {
      allow read;
      allow update: if isSignedIn() && isUser(existingData().uid) && isUser(incomingData().uid);
    }

    // Threads
    match /thread/{threadId} {
      allow read;
      allow create: if isSignedIn() && isUser(incomingData().owner);
      allow update, delete: if isSignedIn() && isUser(existingData().owner) && isUser(incomingData().owner);
    }

    // Replies
    match /reply/{replyId} {
      allow read;
      allow create: if isSignedIn() && isUser(incomingData().owner);
      allow update, delete: if isSignedIn() && isUser(existingData().owner) && isUser(incomingData().owner);
    }

    // example application for functions
    // match /orders/{orderId} {
    //   allow create: if isSignedIn() && emailVerified() && isUser(incomingData().userId);
    //   allow read, list, update, delete: if isSignedIn() && isUser(existingData().userId);
    // }
  }
}